from aiogram import html


class MESSAGES:
    class Info:
        answer_from_admin = "–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
        answer_from_api = "–û—Ç–≤–µ—Ç –Ω–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å:"
        answer_sent = "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
        another_questions = "\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –≤–æ–ø—Ä–æ—Å—ã:"
        waiting = (
            "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –∞–¥–º–∏–Ω –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
        )

        class ThanksForFeedback:
            ok = "\n–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤, –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å –í–∞–º"
            nok = "\n–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å"

        class AnswerWithReactions:
            @staticmethod
            def _format_response_with_reactions(
                prefix: str, answer: str, feedback: str
            ) -> str:
                return "\n".join([prefix, html.code(html.quote(answer)), feedback])

            @staticmethod
            def from_admin(answer: str) -> str:
                return (
                    MESSAGES.Info.AnswerWithReactions._format_response_with_reactions(
                        MESSAGES.Info.answer_from_admin,
                        answer,
                        MESSAGES.Reactions.to_answer,
                    )
                )

            @staticmethod
            def from_api(answer: str) -> str:
                return (
                    MESSAGES.Info.AnswerWithReactions._format_response_with_reactions(
                        MESSAGES.Info.answer_from_api,
                        answer,
                        MESSAGES.Reactions.to_answer,
                    )
                )

        class ResponseFromApi:
            @staticmethod
            def _format_response_from_api(answer: str, feedback: str) -> str:
                return "\n".join(
                    [
                        MESSAGES.Info.answer_from_api,
                        html.code(html.quote(answer)),
                        feedback,
                    ]
                )

            @staticmethod
            def ok(answer: str) -> str:
                return MESSAGES.Info.ResponseFromApi._format_response_from_api(
                    answer, MESSAGES.Info.ThanksForFeedback.ok
                )

            @staticmethod
            def nok(answer: str) -> str:
                return MESSAGES.Info.ResponseFromApi._format_response_from_api(
                    answer, MESSAGES.Info.ThanksForFeedback.nok
                )

        class ResponseFromAdmin:
            @staticmethod
            def _format_response_from_admin(answer: str, feedback: str) -> str:
                return "\n".join(
                    [
                        MESSAGES.Info.answer_from_admin,
                        html.code(html.quote(answer)),
                        feedback,
                    ]
                )

            @staticmethod
            def ok(answer: str) -> str:
                return MESSAGES.Info.ResponseFromAdmin._format_response_from_admin(
                    answer, MESSAGES.Info.ThanksForFeedback.ok
                )

            @staticmethod
            def nok(answer: str) -> str:
                return MESSAGES.Info.ResponseFromAdmin._format_response_from_admin(
                    answer, MESSAGES.Info.another_questions
                )

        @staticmethod
        def question_after_reaction(question: str, answer: str) -> str:
            return "\n".join(
                [
                    "–í–æ–ø—Ä–æ—Å",
                    html.code(html.quote(question)),
                    "–û—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã",
                    html.code(html.quote(answer)),
                    "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –ø–æ–º–æ–≥ –æ—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã",
                ]
            )

        @staticmethod
        def question_without_answer(
            username_url: str, question: str, answers: list[str, ...]
        ) -> str:
            return "\n".join(
                [
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username_url} –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –Ω–∞—à–µ–ª—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ:",
                    html.code(html.quote(question)),
                    f"\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:",
                    f"\n".join(
                        [
                            f"\n#Ô∏è‚É£ {i + 1}. {html.code(html.quote(answer))}"
                            for i, answer in enumerate(answers)
                        ]
                    ),
                ]
            )

        @staticmethod
        def another_question(username_url: str, question: str):
            return "\n".join(
                [
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {username_url} –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –æ—Ç–≤–µ—Ç. –û–Ω –∑–∞–¥–∞–ª –µ—â–µ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å:",
                    html.code(html.quote(question)),
                ]
            )

        @staticmethod
        def new_question(question: str, answer_from_api: str) -> str:
            return "\n".join(
                [
                    "–í–æ–ø—Ä–æ—Å:",
                    question,
                    "\n–û—Ç–≤–µ—Ç —Å–∏—Å—Ç–µ–º—ã:",
                    answer_from_api,
                    "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –ø–æ–º–æ–≥ –æ—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã",
                ]
            )

        @staticmethod
        def add_instruction_to_question(
            question: str,
            question_mid: str | int,
            username: str,
        ) -> str:
            return "\n".join(
                [
                    question,
                    "\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤–≤–µ–¥–∏—Ç–µ:",
                    html.code(f"/–æ—Ç–≤–µ—Ç–∏—Ç—å {question_mid} –í–∞—à_–æ—Ç–≤–µ—Ç"),
                    f"\n–ó–∞ –æ—Ç–≤–µ—Ç –≤–∑—è–ª—Å—è {username}",
                ]
            )

        @staticmethod
        def add_sent_status(message: str) -> str:
            return "\n".join([message, MESSAGES.Info.answer_sent])

        @staticmethod
        def add_answer(answer: str) -> str:
            return "\n".join(
                [
                    "‚úÖ –û—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î:",
                    html.code(html.quote(answer)),
                ]
            )

        @staticmethod
        def get_chat_id(cid: str | int) -> str:
            return f"ID —á–∞—Ç–∞: {html.bold(html.quote(cid))}"

    class Errors:
        add_answer = (
            "–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å —Å–æ–æ–±—â–µ–Ω–∏–µ "
            "—ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ –ë–î."
        )
        cancel_answering = "–ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—á–∞–µ—Ç –¥—Ä—É–≥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä."
        not_found_cid_or_mid = (
            "–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —á–∞—Ç —Å —Ç–∞–∫–∏–º ID –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n" "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
        )
        question_from_another_user = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, —ç—Ç–æ –Ω–µ –í—ã –∑–∞–¥–∞–≤–∞–ª–∏ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å"
        answer_already_exists = "–¢–∞–∫–æ–π –æ—Ç–≤–µ—Ç —É–∂–µ –µ—Å—Ç—å –≤ –ë–î"
        other = (
            f"–£–ø—Å! {html.bold('–û—à–∏–±–∫–∞!')} –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, "
            f"–æ—à–∏–±–∫–∞ —É–∂–µ {html.bold('–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞')} —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É."
        )
        cannot_change_page = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É"

        class AnswerToTheQuestion:
            did_not_reply_to_the_msg = "–í–∞–º –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º"
            no_args = "–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            incorrect_args = (
                "–£–∫–∞–∂–∏—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã\n"
                f"–ü—Ä–∏–º–µ—Ä: {html.code('/–æ—Ç–≤–µ—Ç 516712732 12 –í–∞—à_–æ—Ç–≤–µ—Ç')}"
            )

        @staticmethod
        def report_message(cid: str | int, exception: Exception) -> str:
            return "\n".join(
                [
                    f"–°–ª—É—á–∏–ª–∞—Å—å {html.bold('–æ—à–∏–±–∫–∞')} –≤ —á–∞—Ç–µ {html.bold(cid)}\n"
                    f"–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: {html.code(html.quote(exception))}"
                ]
            )

    class Reactions:
        to_answer = "\n–ü–æ–º–æ–≥ –ª–∏ –≤–∞–º –æ—Ç–≤–µ—Ç?\n" "üëç ‚Äì –î–∞\n" "üëé ‚Äì –ù–µ—Ç"
